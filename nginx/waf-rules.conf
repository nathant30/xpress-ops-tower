# Web Application Firewall Rules for Xpress Ops Tower
# Advanced security rules to protect against common attacks

# Block common SQL injection patterns
location ~ /api/ {
    # Block obvious SQL injection attempts
    if ($query_string ~* "(\%27)|(\')|(\-\-)|(\%23)|(#)") { return 403; }
    if ($query_string ~* "((\%3D)|(=))[^\n]*((\%27)|(\')|(\-\-)|(\%3B)|(;))") { return 403; }
    if ($query_string ~* "union.*select.*\(") { return 403; }
    if ($query_string ~* "union.*all.*select") { return 403; }
    if ($query_string ~* "concat.*\(") { return 403; }
    
    # Block XSS attempts
    if ($query_string ~* "(\<|%3C).*script.*(\>|%3E)") { return 403; }
    if ($query_string ~* "javascript:") { return 403; }
    if ($query_string ~* "vbscript:") { return 403; }
    if ($query_string ~* "onload(.*)\=") { return 403; }
    if ($query_string ~* "onunload(.*)\=") { return 403; }
    if ($query_string ~* "onmouseover(.*)\=") { return 403; }
    if ($query_string ~* "onclick(.*)\=") { return 403; }
    
    # Block file inclusion attempts
    if ($query_string ~* "(\.\./|\.\.\%2F|\.\.\%252F)") { return 403; }
    if ($query_string ~* "etc/passwd") { return 403; }
    if ($query_string ~* "boot\.ini") { return 403; }
    if ($query_string ~* "httpd\.conf") { return 403; }
    if ($query_string ~* "ftp\:") { return 403; }
    if ($query_string ~* "php\://") { return 403; }
    
    # Continue with normal processing
    try_files $uri @backend;
}

# Block suspicious user agents
if ($http_user_agent ~* "(\b(nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)\b)") {
    return 403;
}

# Block common exploit attempts
location ~* "(\b(globals|encode|localhost|loopback)\b|(\%0A|\%0D|\%27|\%3C|\%3E|\%00))" {
    return 403;
}

# Block access to sensitive files
location ~* "\.(htaccess|htpasswd|ini|log|sh|sql|conf)$" {
    deny all;
}

# Block access to hidden files
location ~ /\. {
    deny all;
}

# Rate limiting for different endpoints
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=emergency:10m rate=100r/s;

# Apply rate limits to specific locations
location /api/auth/ {
    limit_req zone=auth burst=10 nodelay;
    try_files $uri @backend;
}

location /api/emergency/ {
    limit_req zone=emergency burst=50 nodelay;
    try_files $uri @backend;
}

# Default API rate limiting
location /api/ {
    limit_req zone=api burst=20 nodelay;
    try_files $uri @backend;
}

# Geo-blocking (uncomment and configure for production)
# geo $blocked_country {
#     default 0;
#     # Block specific countries (example)
#     # CN 1;  # China
#     # RU 1;  # Russia
# }
# 
# if ($blocked_country) {
#     return 403;
# }

# IP whitelisting for admin endpoints (configure in production)
location /admin/ {
    # allow 192.168.1.0/24;  # Internal network
    # allow 10.0.0.0/8;      # VPN network
    # deny all;
    try_files $uri @backend;
}

# Block known bad IPs (maintain this list)
location / {
    # Example blocked IPs (configure based on threat intelligence)
    # deny 192.0.2.1;
    # deny 203.0.113.0/24;
    try_files $uri @backend;
}